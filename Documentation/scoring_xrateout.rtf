{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
\margl1440\margr1440\vieww15980\viewh14620\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs36 \cf0 These are codes for testing crate ancestral reconstructions without converting them to gffs. It is particularly useful for data generated by generator, because it doesn't have position information.\
\

\b simplify_ar\
	
\b0 Takes -ar output from xrate and outputs an stk containing only the ancestral reconstruction (instead of the information in the input stk.) The only command line argument is the -ar output of xrate. For example:\
simplify_ar arout > xrate_ar.stk\
\

\b accuracy_L0\

\b0 	\CocoaLigature0 Calculates column level accuracy of an stk for oldL0 alphabet: L0.eg, L0_trans.eg, L0_trans_strands.eg. Outputs a line with exon/not exon accuracy followed by exact accuracy. At position in the target sequence it checks agreement with the correct stk. It count all the times that they both say exon/not exon and the times when the letters agree exactly.\
	The command line arguments are: name of the target, the xrate output after simplify_ar, the generator output. For example:\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural
\cf0 accuracy_L0 A xrateout genet >> accuracy\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\b \cf0 \CocoaLigature1 accuracy_L1\

\b0 	\CocoaLigature0 Calculates column level accuracy of an stk for an L1 alphabet: L1_trans_strands_4transpose.eg, L1utr_trans_strands_4transpose.eg. Outputs a line with exon/not exon accuracy followed by exact accuracy. At position in the target sequence it checks agreement with the correct stk. It count all the times that they both say exon/not exon and the times when the letters agree exactly.\
	The command line arguments are: name of the target, the xrate output after simplify_ar, the generator output. For example:\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural
\cf0 accuracy_L0 A xrateout genet >> accuracy\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b \cf0 exonpps_L0\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b0 \cf0  	At each column position, gives the posterior probability that there is an exon at the postion, followed by whether or not there actually is an exon there. Can be used to generate ROC curves. Use with oldL0 grammars: L0.eg, L0_trans.eg, L0_trans_strands_4transpose.eg. First it reads through the posterior probability output given by xrate's -pp option to get the posterior probability for each letter. For each section column it outputs the total posterior probability of exon. Then it checks the correct stk and output 1 if it is exon and 0 if it is not exon. The command line arguments are: name of the target, xrate -pp output, generator output. For example:\
exonpps_L0 A ppout genout > exonppsdata\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b \cf0 exonpps_L1\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b0 \cf0  	At each column position, gives the posterior probability that there is an exon at the postion, followed by whether or not there actually is an exon there. Can be used to generate ROC curves. Use with L1 grammar: L1_trans_strands_4transpose.eg. First it reads through the posterior probability output given by xrate's -pp option to get the posterior probability for each letter. For each section column it outputs the total posterior probability of exon. Then it checks the correct stk and output 1 if it is exon and 0 if it is not exon. The command line arguments are: name of the target, xrate -pp output, generator output. For example:\
exonpps_L1 A ppout genout > exonppsdata\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b \cf0 exactpps_L0\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b0 \cf2 This code creates data that can be used for an ROC curve, similar to exonpps_L0. For use with oldL0 grammars: L0.eg, L0_trans.eg, L0_trans_strands_4transpose.eg. Instead of giving total exon proability, if the correct letter is exon, it gives the probability of the correct letter. If the correct letter is not exon, it gives 1 - the probability of the correct letter. The second column is 1 if the correct letter is exon, 0 if it is not.\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b \cf0 exactpps_L1\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b0 \cf0 This code creates data that can be used for an ROC curve, similar to exonpps_L1. For use with L1_trans_strands_4transpose.eg. Instead of giving total exon proability, if the correct letter is exon, it gives the probability of the correct letter. If the correct letter is not exon, it gives 1 - the probability of the correct letter. The second column is 1 if the correct letter is exon, 0 if it is not.}